[{"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\index.js":"1","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\reportWebVitals.js":"2","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\App.js":"3","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Sidebar\\Sidebar.js":"4","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Header\\Header.js":"5","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Footer\\Footer.js":"6","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Film\\Film.js":"7","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Actor\\ActorPage.js":"8","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Button\\CustomButton.js":"9","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\services\\axios-instance.js":"10","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table3.js":"11","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Actor\\Actor.js":"12","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table.js":"13","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\TestHook\\TestHook.js":"14","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table4.js":"15","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\TestHook\\TestHook2.js":"16","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\TestHook\\TestHook3.js":"17"},{"size":500,"mtime":1611761499000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1611761499000,"results":"20","hashOfConfig":"19"},{"size":1387,"mtime":1612490119218,"results":"21","hashOfConfig":"19"},{"size":880,"mtime":1611761499000,"results":"22","hashOfConfig":"19"},{"size":1473,"mtime":1612490053770,"results":"23","hashOfConfig":"19"},{"size":830,"mtime":1611761499000,"results":"24","hashOfConfig":"19"},{"size":22143,"mtime":1612433798091,"results":"25","hashOfConfig":"26"},{"size":10816,"mtime":1612406511383,"results":"27","hashOfConfig":"26"},{"size":382,"mtime":1611761499000,"results":"28","hashOfConfig":"19"},{"size":229,"mtime":1611761499000,"results":"29","hashOfConfig":"19"},{"size":3927,"mtime":1612410161377,"results":"30","hashOfConfig":"26"},{"size":3367,"mtime":1612402288479,"results":"31","hashOfConfig":"26"},{"size":2738,"mtime":1611761499000,"results":"32","hashOfConfig":"26"},{"size":8721,"mtime":1612430386988,"results":"33","hashOfConfig":"19"},{"size":2230,"mtime":1612432897512,"results":"34","hashOfConfig":"19"},{"size":18794,"mtime":1612491773815,"results":"35","hashOfConfig":"19"},{"size":243,"mtime":1612492302484,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"apem98",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"194bzy0",{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\index.js",[],["80","81"],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\reportWebVitals.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\App.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Header\\Header.js",["82","83","84","85","86"],"import React from 'react'\nimport {\n    Button,\n    Form,\n    FormControl,\n    Nav,\n    Navbar,\n    NavDropdown,\n} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Link,\n    NavLink,\n    withRouter,\n} from 'react-router-dom'\nimport {\n    HomeRounded\n} from '@material-ui/icons'\nimport './Header.css'\n\nconst Header = (props) => {\n    const pathName = props?.location?.pathname;\n    return (\n        <Navbar expand=\"lg\" sticky=\"top\" className=\"header\">\n            <Nav.Link as={NavLink} to=\"/\" className=\"header_navlink\">\n                <Navbar.Brand className=\"header_home\">\n                    <HomeRounded />\n                </Navbar.Brand>\n            </Nav.Link>\n\n            <Navbar.Toggle />\n\n            <Navbar.Collapse>\n                <Nav>\n                    <Nav.Link as={NavLink} to=\"/\" className={pathName === '/' ? 'header_link_active' : 'header_link'}>\n                        Actor\n                    </Nav.Link>\n                    <Nav.Link as={NavLink} to=\"/film\" className={pathName === '/film' ? 'header_link_active' : 'header_link'}>\n                        Film\n                    </Nav.Link>\n                    <Nav.Link as={NavLink} to=\"/dataTable\" className={pathName === '/dataTable' ? 'header_link_active' : 'header_link'}>\n                        data Table\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default withRouter(Header)\n","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Footer\\Footer.js",["87"],"import React from 'react'\nimport { Typography } from '@material-ui/core';\nimport './Footer.css'\n\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer_left\">\n                <Typography className=\"footer_name\">\n                    Dvd Rental\n                </Typography>\n            </div>\n            <div className=\"footer_right\">\n                <Typography className=\"footer_copyright\">\n                    Design and Developed by {\" \"}\n                    <a href=\"/\" target=\"_blank\">Mochamad Dwi Fadly</a>\n                    <br />\n                    Clone idea from {\" \"}\n                    <a href=\"https:///themeforest.net/user/travonline\" target=\"_blank\">Travonline</a>\n                </Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Film\\Film.js",["88","89"],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Actor\\ActorPage.js",["90","91","92"],"import { React, Component } from 'react'\r\nimport TableComp from '../../components/Table/Table3'\r\nimport { Container, Grid, Typography, Button } from '@material-ui/core';\r\nimport './Actor.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Axios from \"../../services/axios-instance\";\r\nimport Swal from \"sweetalert2\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport dateFormat from 'dateformat';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nclass ActorPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            actors: [],\r\n            actorId: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            searchActor: \"\",\r\n            editIdx: -1,\r\n            conditions: false,\r\n            stateForm: \"Add\",\r\n            columns: [\r\n                { field: 'actorId', title: 'Actor Id' },\r\n                { field: 'firstName', title: 'First Name' },\r\n                { field: 'lastName', title: 'Last Name' },\r\n                { field: 'lastUpdate', title: 'Last Update', render: rowData => dateFormat(rowData.lastUpdate, \"mmmm dS, yyyy\") },\r\n            ]\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        this.findActor();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.state.conditions) {\r\n            this.findActor();\r\n            this.setState({ conditions: false });\r\n        }\r\n    }\r\n\r\n    findActor() {\r\n        Axios.get(\"actor\").then((response) => {\r\n            console.log(response);\r\n            this.setState({\r\n                actors: response.data\r\n            })\r\n        })\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    handleSubmitSave = (event) => {\r\n        const actor = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName\r\n        }\r\n        Swal.fire({\r\n            icon: 'question',\r\n            text: 'Your input data is correct?',\r\n            showCancelButton: true,\r\n            confirmButtonText: `Save`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                if (this.state.stateForm === \"Add\") {\r\n                    Axios.post(\"actor\", actor).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new Actor!',\r\n                        }).then((result) => {\r\n                            this.setState({ firstName: \"\", lastName: \"\", conditions: true })\r\n                        })\r\n                    })\r\n                } else {\r\n                    Axios.put(\"actor/id/\" + this.state.actorId, actor).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new Actor!',\r\n                        }).then((result) => {\r\n                            this.setState({ firstName: \"\", lastName: \"\", conditions: true, stateForm: \"Add\" })\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleRemove = (i) => {\r\n        console.log(i)\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            text: 'Do you want to delete this data?',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `Cancel`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Axios.delete(\"actor/id/\" + i).then((response) => {\r\n                    console.log(response);\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Successfully!',\r\n                        text: 'You submit a new Actor!',\r\n                    }).then((result) => {\r\n                        this.setState({ firstName: \"\", lastName: \"\", conditions: true, stateForm: \"Add\" })\r\n                    })\r\n                }).catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.header);\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: error.response.data.message,\r\n                        }).then((result) => {\r\n                            this.setState({ firstName: \"\", lastName: \"\", conditions: true, stateForm: \"Add\" })\r\n                        })\r\n                    }\r\n                })\r\n            } else if (result.isDenied) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBackToAdd = () => {\r\n        this.setState({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            stateForm: \"Add\"\r\n        });\r\n    }\r\n\r\n    handleUpdate = (i) => {\r\n        console.log(i)\r\n        Axios.get(\"actor/id/\" + i).then((response) => {\r\n            console.log(response);\r\n            this.setState({\r\n                actorId: response.data.actorId,\r\n                firstName: response.data.firstName,\r\n                lastName: response.data.lastName,\r\n                stateForm: \"Update\"\r\n            })\r\n        })\r\n        this.setState({\r\n            editIdx: i,\r\n        })\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        console.log(event.target.value);\r\n        if (event.target.value !== \"\") {\r\n            Axios.get(\"actor/search/\" + event.target.value).then((response) => {\r\n                console.log(response);\r\n                this.setState({\r\n                    actors: response.data,\r\n                })\r\n            }).catch(function (error) {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                    console.log(error.response.status);\r\n                    console.log(error.response.header);\r\n                }\r\n                this.findActor();\r\n            })\r\n        } else {\r\n            this.findActor();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const useStyles = makeStyles((theme) => ({\r\n            card: {\r\n                width: 500,\r\n                maxWidth: 300,\r\n                margin: \"auto\",\r\n                transition: \"0.3s\",\r\n                boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\r\n                \"&:hover\": {\r\n                    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\r\n                }\r\n            },\r\n        }));\r\n\r\n        return (\r\n            <>\r\n                <Grid container className=\"section\">\r\n                    <Grid item className=\"section_title\" xs={12}>\r\n                        <Typography variant='h6'>Actor Page</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container className=\"\">\r\n                    <Typography style={{ alignItems: 'center' }}>Form {this.state.stateForm}</Typography>\r\n                    <br />\r\n                    <Paper style={{ padding: 16, width: '100%', }}>\r\n                        <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"First Name\" name=\"firstName\" required value={this.state.firstName} onChange={this.handleChange} />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Last Name\" name=\"lastName\" required value={this.state.lastName} onChange={this.handleChange} />\r\n                                \r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={!this.state.firstName || !this.state.lastName}\r\n                                    style={{ width: '100%' }}\r\n                                    onClick={this.handleSubmitSave}\r\n                                >\r\n                                    {this.state.stateForm} Actor\r\n                                </Button>\r\n                            </Grid>\r\n                            {(() => {\r\n                                if (this.state.stateForm === 'Update') {\r\n                                    return (\r\n                                        <>\r\n                                            <Grid item xs={12}>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"secondary\"\r\n                                                    style={{ width: '100%' }}\r\n                                                    onClick={this.handleBackToAdd}\r\n                                                >\r\n                                                    <ArrowBackIosIcon /> Back to add data\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                                return;\r\n                            })()}\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n                <br />\r\n                <Grid container className=\"\">\r\n                    <Grid item xs={8}>\r\n                        <Typography>List Actor</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container className=\"\">\r\n                    <TableComp\r\n                        allData={this.state.actors}\r\n                        allColumns={this.state.columns}\r\n                        startEditing={this.handleUpdate}\r\n                        handleRemove={this.handleRemove}\r\n                        formData=\"actor\"\r\n                        title=\"Table Actor\"\r\n                    />\r\n                </Grid>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActorPage\r\n",["93","94"],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Button\\CustomButton.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\services\\axios-instance.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table3.js",["95","96","97","98"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table'\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Axios from \"../../services/axios-instance\";\r\nimport { CsvBuilder } from \"filefy\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: 'white',\r\n            backroundColor: '#ffc500'\r\n        }\r\n    },\r\n});\r\nconst _filefy = require(\"filefy\");\r\n// function stableSort(array, comparator) {\r\nfunction getFieldValue(rowData, columnDef, lookup = true) {\r\n    let value = rowData[columnDef.field]\r\n\r\n    if (columnDef.lookup && lookup) {\r\n        value = columnDef.lookup[value];\r\n    }\r\n\r\n    return value;\r\n}\r\nexport default ({ allData, allColumns, startEditing, handleRemove, formData, title }) => {\r\n    // const clases = useStyles();\r\n\r\n    const deffexportCsv = (allColumns, allData) => {\r\n        const columns = allColumns.filter(columnDef => columnDef[\"export\"] !== false);\r\n        const data = allData.map(rowData =>\r\n            allColumns.map(columnDef => {\r\n                // return this.getFieldValue(rowData, columnDef);\r\n                if (typeof columnDef.customExport === \"function\") {\r\n                    return columnDef.customExport(rowData);\r\n                }\r\n                let value = getFieldValue(rowData, columnDef);\r\n                if (Array.isArray(value)) {\r\n                    value = value.join(\",\");\r\n                }\r\n                return value;\r\n            })\r\n        );\r\n        new _filefy.CsvBuilder('filename_.csv')\r\n            // .setDelimeter(';')\r\n            .setColumns(columns.map(columnDef => columnDef.title))\r\n            .addRows(data)\r\n            .exportFile();\r\n    }\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <MaterialTable\r\n                columns={allColumns}\r\n                data={allData}\r\n                title={title}\r\n                actions={[\r\n                    {\r\n                        icon: 'edit',\r\n                        tooltip: 'Edit User',\r\n                        onClick: (event, rowData) => startEditing(formData === \"actor\" ? rowData.actorId : rowData.filmId)\r\n                    },\r\n                    {\r\n                        icon: 'delete',\r\n                        tooltip: 'Delete User',\r\n                        onClick: (event, rowData) => handleRemove(formData === \"actor\" ? rowData.actorId : rowData.filmId),\r\n                    }\r\n                ]}\r\n                components={{\r\n                    Action: props => {\r\n                        if (props.action.icon === 'edit') {\r\n                            return (\r\n                                <Button >\r\n                                    <EditIcon style={{ color: '#ffc500' }} onClick={(event) => props.action.onClick(event, props.data)} />\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        if (props.action.icon === 'delete') {\r\n                            return (\r\n                                <Button style={{ color: '#ff5252' }}>\r\n                                    <DeleteIcon onClick={(event) => props.action.onClick(event, props.data)} />\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    }\r\n                }}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    exportCsv: deffexportCsv,\r\n                    exportAllData: true,\r\n                }}\r\n            />\r\n        </TableContainer>\r\n    );\r\n}","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Actor\\Actor.js",["99"],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table.js",["100"],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\TestHook\\TestHook.js",["101","102","103","104","105","106"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Grid, Typography, Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport dateFormat from 'dateformat';\r\nimport Axios from \"../../services/axios-instance\";\r\nimport TableComp from '../../components/Table/Table4'\r\nimport Swal from \"sweetalert2\"\r\n\r\nfunction TestHook() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [count, setCount] = useState(0);\r\n    const [fruit, setFruit] = useState('banana');\r\n    const [actorId, setActorId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const [stateForm, setStateForm] = useState(\"Add\");\r\n\r\n    const columns = [\r\n        { name: 'actorId', label: 'Actor Id' },\r\n        { name: 'firstName', label: 'First Name' },\r\n        { name: 'lastName', label: 'Last Name' },\r\n        {\r\n            name: 'lastUpdate', label: 'Last Update',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return dateFormat(value, \"mmmm dS, yyyy\");\r\n                }\r\n            }\r\n\r\n        },\r\n    ];\r\n    const [alert, setAlert] = useState(false);\r\n    const [actors, setActors] = useState([]);\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (actors.length && !alert) {\r\n            return;\r\n        }\r\n        Axios.get(\"actor\").then((response) => {\r\n            setActors(response.data)\r\n            setAlert(false);\r\n        })\r\n        return () => mounted = false;\r\n    }, [alert, actors])\r\n\r\n    const handleSubmitSave = (event) => {\r\n        console.log(firstName)\r\n        console.log(lastName)\r\n        const actor = {\r\n            firstName: firstName,\r\n            lastName: lastName\r\n        }\r\n        Swal.fire({\r\n            icon: 'question',\r\n            text: 'Your input data is correct?',\r\n            showCancelButton: true,\r\n            confirmButtonText: `Save`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                if (stateForm === \"Add\") {\r\n                    Axios.post(\"actor\", actor).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new Actor!',\r\n                        }).then((result) => {\r\n                            setFirstName('')\r\n                            setLastName('')\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                } else {\r\n                    Axios.put(\"actor/id/\" + actorId, actor).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new Actor!',\r\n                        }).then((result) => {\r\n                            setFirstName('')\r\n                            setLastName('')\r\n                            setStateForm('Add')\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    const handleBackToAdd = () => {\r\n        setFirstName('')\r\n        setLastName('')\r\n        setStateForm('Add')\r\n    }\r\n    const handleUpdate = (i) => {\r\n        Axios.get(\"actor/id/\" + i).then((response) => {\r\n            setActorId(response.data.actorId)\r\n            setFirstName(response.data.firstName)\r\n            setLastName(response.data.lastName)\r\n            setStateForm(\"Update\")\r\n        })\r\n    }\r\n    const handleRemove = (i) => {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            text: 'Do you want to delete this data?',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `Cancel`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Axios.delete(\"actor/id/\" + i).then((response) => {\r\n                    console.log(response);\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Successfully!',\r\n                        text: 'You submit a new Actor!',\r\n                    }).then((result) => {\r\n                        setStateForm(\"Add\")\r\n                        setAlert(true)\r\n                    })\r\n                }).catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.header);\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: error.response.data.message,\r\n                        }).then((result) => {\r\n                            setStateForm(\"Add\")\r\n                        })\r\n                    }\r\n                })\r\n            } else if (result.isDenied) {\r\n\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container className=\"section\">\r\n                <Grid item className=\"section_title\" xs={12}>\r\n                    <Typography variant='h6'>Actor Page</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Typography style={{ alignItems: 'center' }}>Form {stateForm}</Typography>\r\n                <br />\r\n                <Paper style={{ padding: 16, width: '100%', }}>\r\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"First Name\" name=\"firstName\" required value={firstName} onChange={e => setFirstName(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Last Name\" name=\"lastName\" required value={lastName} onChange={e => setLastName(e.target.value)} />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={!firstName || !lastName}\r\n                                style={{ width: '100%' }}\r\n                                onClick={handleSubmitSave}\r\n                            >\r\n                                {stateForm} Actor\r\n                                </Button>\r\n                        </Grid>\r\n                        {(() => {\r\n                            if (stateForm === 'Update') {\r\n                                return (\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                style={{ width: '100%' }}\r\n                                                onClick={handleBackToAdd}\r\n                                            >\r\n                                                <ArrowBackIosIcon /> Back to add data\r\n                                                </Button>\r\n                                        </Grid>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            return;\r\n                        })()}\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Grid item xs={8}>\r\n                    <Typography>List Actor</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <TableComp\r\n                    allData={actors}\r\n                    allColumns={columns}\r\n                    title=\"Table Actor\"\r\n                    handleUpdate={handleUpdate}\r\n                    handleRemove={handleRemove}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\nexport default TestHook","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table4.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\TestHook\\TestHook2.js",["107","108","109","110","111"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Grid, Typography, Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport dateFormat from 'dateformat';\r\nimport Axios from \"../../services/axios-instance\";\r\nimport TableComp from '../../components/Table/Table4'\r\nimport Swal from \"sweetalert2\"\r\n\r\nfunction TestHook() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [filmId, setFilmId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [releaseYear, setReleaseYear] = useState('');\r\n    const [rentalDuration, setRentalDuration] = useState('');\r\n    const [rentalRate, setRentalRate] = useState('');\r\n    const [length, setLength] = useState('');\r\n    const [replacementCost, setReplacementCost] = useState('');\r\n    const [languageId, setLanguageId] = useState('');\r\n    const [rating, setRating] = useState('');\r\n    const [ratings, setRatings] = useState([\r\n        { id: \"G\", label: \"G\" },\r\n        { id: \"PG\", label: \"PG\" },\r\n        { id: \"PG13\", label: \"PG-13\" },\r\n        { id: \"NC17\", label: \"NC-17\" },\r\n        { id: \"R\", label: \"R\" },\r\n    ]);\r\n    const [specialFeature, setSpecialFeature] = useState([]);\r\n    const [featureCheck, setFeatureCheck] = useState([\r\n        { status: false, label: \"Commentaries\" },\r\n        { status: false, label: \"Behind the Scenes\" },\r\n        { status: false, label: \"Deleted Scenes\" },\r\n        { status: false, label: \"Trailers\" },\r\n    ]);\r\n    const [stateForm, setStateForm] = useState(\"Add\");\r\n    const columns = [\r\n        { name: 'filmId', label: 'Film Id' },\r\n        { name: 'title', label: 'Title' },\r\n        { name: 'description', label: 'Description' },\r\n        { name: 'releaseYear', label: 'Release Year' },\r\n        {\r\n            name: 'languageId', label: 'Language',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return value.name;\r\n                },\r\n            }\r\n        },\r\n        { name: 'rentalDuration', label: 'Rental Duration' },\r\n        { name: 'rentalRate', label: 'Rental Rate' },\r\n        { name: 'length', label: 'Length' },\r\n        { name: 'replacementCost', label: 'Cost' },\r\n        {\r\n            name: 'rating', label: 'Rating',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    switch (value) {\r\n                        case \"G\":\r\n                            return 'G'\r\n                        case \"PG\":\r\n                            return 'PG'\r\n                        case \"PG13\":\r\n                            return 'PG-13'\r\n                        case \"NC17\":\r\n                            return 'NC-17'\r\n                        case \"R\":\r\n                            return 'R'\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        {\r\n            name: 'specialFeature', label: 'Special Features',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return value + \", \";\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'lastUpdate', label: 'Last Update',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return dateFormat(value, \"mmmm dS, yyyy\");\r\n                }\r\n            }\r\n        }\r\n    ];\r\n    const [alert, setAlert] = useState(false);\r\n    const [films, setFilms] = useState([]);\r\n    useEffect(() => {\r\n        if (films.length && !alert) {\r\n            return;\r\n        }\r\n        Axios.get(\"film\").then((response) => {\r\n            setFilms(response.data)\r\n            setAlert(false);\r\n        })\r\n    }, [alert, films])\r\n\r\n    const [alertLanguages, setAlertLanguages] = useState(false);\r\n    const [languages, setLanguages] = useState([]);\r\n    useEffect(() => {\r\n        if (languages.length && !alert) {\r\n            return;\r\n        }\r\n        Axios.get(\"language\").then((response) => {\r\n            setLanguages(response.data)\r\n            setAlertLanguages(false)\r\n        })\r\n    }, [alertLanguages, languages])\r\n\r\n    const handleSubmitSave = (event) => {\r\n        const film = {\r\n            title: title,\r\n            description: description,\r\n            languageId: languageId,\r\n            length: length,\r\n            rating: rating,\r\n            releaseYear: releaseYear,\r\n            rentalDuration: rentalDuration,\r\n            rentalRate: rentalRate,\r\n            replacementCost: replacementCost,\r\n            specialFeature: specialFeature\r\n        }\r\n        console.log(film)\r\n        Swal.fire({\r\n            icon: 'question',\r\n            text: 'Your input data is correct?',\r\n            showCancelButton: true,\r\n            confirmButtonText: `Save`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                if (stateForm === \"Add\") {\r\n                    Axios.post(\"film\", film).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new film!',\r\n                        }).then((result) => {\r\n                            setTitle('')\r\n                            setDescription('')\r\n                            setLanguageId('')\r\n                            setLength('')\r\n                            setRating('')\r\n                            setReleaseYear('')\r\n                            setRentalDuration('')\r\n                            setRentalRate('')\r\n                            setReplacementCost('')\r\n                            setSpecialFeature([])\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                } else {\r\n                    Axios.put(\"film/id/\" + filmId, film).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new film!',\r\n                        }).then((result) => {\r\n                            setTitle('')\r\n                            setDescription('')\r\n                            setLanguageId('')\r\n                            setLength('')\r\n                            setRating('')\r\n                            setReleaseYear('')\r\n                            setRentalDuration('')\r\n                            setRentalRate('')\r\n                            setReplacementCost('')\r\n                            setSpecialFeature([])\r\n                            setStateForm('Add')\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    const handleBackToAdd = () => {\r\n        setTitle('')\r\n        setDescription('')\r\n        setStateForm('Add')\r\n    }\r\n    const handleUpdate = (i) => {\r\n        Axios.get(\"film/id/\" + i).then((response) => {\r\n            console.log(response.data)\r\n            setFilmId(response.data.filmId)\r\n            setTitle(response.data.title)\r\n            setDescription(response.data.description)\r\n            setLanguageId(response.data.languageId.languageId)\r\n            setLength(response.data.length)\r\n            setRating(response.data.rating)\r\n            setReleaseYear(response.data.releaseYear)\r\n            setRentalDuration(response.data.rentalDuration)\r\n            setRentalRate(response.data.rentalRate)\r\n            setReplacementCost(response.data.replacementCost)\r\n            setSpecialFeature(response.data.specialFeature)\r\n            setStateForm(\"Update\")\r\n        })\r\n    }\r\n    const handleRemove = (i) => {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            text: 'Do you want to delete this data?',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `Cancel`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Axios.delete(\"film/id/\" + i).then((response) => {\r\n                    console.log(response);\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Successfully!',\r\n                        text: 'You submit a new film!',\r\n                    }).then((result) => {\r\n                        setStateForm(\"Add\")\r\n                        setAlert(true)\r\n                    })\r\n                }).catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.header);\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: error.response.data.message,\r\n                        }).then((result) => {\r\n                            setStateForm(\"Add\")\r\n                        })\r\n                    }\r\n                })\r\n            } else if (result.isDenied) {\r\n\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container className=\"section\">\r\n                <Grid item className=\"section_title\" xs={12}>\r\n                    <Typography variant='h6'>film Page</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Typography style={{ alignItems: 'center' }}>Form {stateForm}</Typography>\r\n                <br />\r\n                <Paper style={{ padding: 16, width: '100%', }}>\r\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Title\" name=\"title\" required value={title} onChange={e => setTitle(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                id=\"standard-select-language\"\r\n                                select\r\n                                label=\"Language\"\r\n                                name=\"languageId\"\r\n                                value={languageId}\r\n                                onChange={e => setLanguageId(e.target.value)}\r\n                                helperText=\"Please select your language\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                {languages.map((option) => (\r\n                                    <MenuItem key={option.languageId} value={option.languageId}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                id=\"standard-select-rating\"\r\n                                select\r\n                                label=\"Rating\"\r\n                                name=\"rating\"\r\n                                value={rating}\r\n                                onChange={e => setRating(e.target.value)}\r\n                                helperText=\"Please select your Rating\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                {ratings.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField style={{ width: '100%', }} label=\"Description\" name=\"description\" required value={description} onChange={e => setDescription(e.target.value)} multiline rows={2} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Release Year\" name=\"releaseYear\" required value={releaseYear} onChange={e => setReleaseYear(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <CalendarTodayIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Length\" name=\"length\" required value={length} onChange={e => setLength(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Rental Duration\" name=\"rentalDuration\" required value={rentalDuration} onChange={e => setRentalDuration(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <UpdateIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Rental Rate\" name=\"rentalRate\" required value={rentalRate} onChange={e => setRentalRate(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AttachMoneyIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Replacement Cost\" name=\"replacementCost\" required value={replacementCost} onChange={e => setReplacementCost(e.target.value)} InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AttachMoneyIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormLabel component=\"legend\">Special Features</FormLabel>\r\n                            {featureCheck.map((x, i) => (\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={specialFeature.includes(x.label) === true ? true : x.status} onChange={e => setSpecialFeature([...specialFeature, e.target.name])} name={x.label} />}\r\n                                    label={x.label}\r\n                                />\r\n                            ))}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={!title || !description || !languageId || !rating || !length || !releaseYear || !rentalDuration || !rentalRate || !replacementCost || specialFeature.length < 1}\r\n                                style={{ width: '100%' }}\r\n                                onClick={handleSubmitSave}\r\n                            >\r\n                                {stateForm} Film\r\n                                </Button>\r\n                        </Grid>\r\n                        {(() => {\r\n                            if (stateForm === 'Update') {\r\n                                return (\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                style={{ width: '100%' }}\r\n                                                onClick={handleBackToAdd}\r\n                                            >\r\n                                                <ArrowBackIosIcon /> Back to add data\r\n                                                </Button>\r\n                                        </Grid>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            return;\r\n                        })()}\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Grid item xs={8}>\r\n                    <Typography>List film</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <TableComp\r\n                    allData={films}\r\n                    allColumns={columns}\r\n                    title=\"Table Film\"\r\n                    handleUpdate={handleUpdate}\r\n                    handleRemove={handleRemove}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\nexport default TestHook","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\TestHook\\TestHook3.js",["112","113"],"import React, {useState, useEffect} from 'react'\r\n\r\nfunction TestHook3() {\r\n    // const [lastName, setlastName] = useState(initialState)\r\n    return (\r\n        <>\r\n            <h1>Test</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestHook3\r\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":5,"nodeType":"120","messageId":"121","endLine":3,"endColumn":11},{"ruleId":"118","severity":1,"message":"122","line":4,"column":5,"nodeType":"120","messageId":"121","endLine":4,"endColumn":9},{"ruleId":"118","severity":1,"message":"123","line":5,"column":5,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"124","line":8,"column":5,"nodeType":"120","messageId":"121","endLine":8,"endColumn":16},{"ruleId":"118","severity":1,"message":"125","line":12,"column":5,"nodeType":"120","messageId":"121","endLine":12,"endColumn":9},{"ruleId":"126","severity":1,"message":"127","line":20,"column":21,"nodeType":"128","endLine":20,"endColumn":88},{"ruleId":"118","severity":1,"message":"129","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":19},{"ruleId":"118","severity":1,"message":"130","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":18},{"ruleId":"118","severity":1,"message":"129","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":19},{"ruleId":"118","severity":1,"message":"131","line":12,"column":8,"nodeType":"120","messageId":"121","endLine":12,"endColumn":13},{"ruleId":"118","severity":1,"message":"132","line":189,"column":15,"nodeType":"120","messageId":"121","endLine":189,"endColumn":24},{"ruleId":"114","replacedBy":"133"},{"ruleId":"116","replacedBy":"134"},{"ruleId":"118","severity":1,"message":"135","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":13},{"ruleId":"118","severity":1,"message":"136","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":20},{"ruleId":"118","severity":1,"message":"132","line":12,"column":7,"nodeType":"120","messageId":"121","endLine":12,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":33,"column":1,"nodeType":"139","endLine":102,"endColumn":2},{"ruleId":"118","severity":1,"message":"129","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":53,"column":1,"nodeType":"139","endLine":75,"endColumn":2},{"ruleId":"118","severity":1,"message":"129","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":19},{"ruleId":"118","severity":1,"message":"140","line":13,"column":12,"nodeType":"120","messageId":"121","endLine":13,"endColumn":17},{"ruleId":"118","severity":1,"message":"141","line":13,"column":19,"nodeType":"120","messageId":"121","endLine":13,"endColumn":27},{"ruleId":"118","severity":1,"message":"142","line":14,"column":12,"nodeType":"120","messageId":"121","endLine":14,"endColumn":17},{"ruleId":"118","severity":1,"message":"143","line":14,"column":19,"nodeType":"120","messageId":"121","endLine":14,"endColumn":27},{"ruleId":"118","severity":1,"message":"144","line":46,"column":22,"nodeType":"120","messageId":"121","endLine":46,"endColumn":29},{"ruleId":"118","severity":1,"message":"129","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":19},{"ruleId":"118","severity":1,"message":"145","line":31,"column":21,"nodeType":"120","messageId":"121","endLine":31,"endColumn":31},{"ruleId":"118","severity":1,"message":"146","line":39,"column":26,"nodeType":"120","messageId":"121","endLine":39,"endColumn":41},{"ruleId":"147","severity":1,"message":"148","line":67,"column":21,"nodeType":"149","messageId":"150","endLine":78,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":121,"column":8,"nodeType":"153","endLine":121,"endColumn":35,"suggestions":"154"},{"ruleId":"118","severity":1,"message":"155","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"156","line":1,"column":26,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Container' is defined but never used.","'SearchIcon' is defined but never used.","'Input' is defined but never used.","'useStyles' is assigned a value but never used.",["157"],["158"],"'Axios' is defined but never used.","'CsvBuilder' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'fruit' is assigned a value but never used.","'setFruit' is assigned a value but never used.","'mounted' is assigned a value but never used.","'setRatings' is assigned a value but never used.","'setFeatureCheck' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [alert, alertLanguages, languages]",{"range":"162","text":"163"},[4787,4814],"[alert, alertLanguages, languages]"]