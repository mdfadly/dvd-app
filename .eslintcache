[{"E:\\BCA Trainee\\dvd-app\\src\\index.js":"1","E:\\BCA Trainee\\dvd-app\\src\\reportWebVitals.js":"2","E:\\BCA Trainee\\dvd-app\\src\\App.js":"3","E:\\BCA Trainee\\dvd-app\\src\\components\\Footer\\Footer.js":"4","E:\\BCA Trainee\\dvd-app\\src\\components\\Sidebar\\Sidebar.js":"5","E:\\BCA Trainee\\dvd-app\\src\\pages\\TestHook\\TestHook.js":"6","E:\\BCA Trainee\\dvd-app\\src\\pages\\TestHook\\TestHook3.js":"7","E:\\BCA Trainee\\dvd-app\\src\\pages\\TestHook\\TestHook2.js":"8","E:\\BCA Trainee\\dvd-app\\src\\components\\Header\\Header.js":"9","E:\\BCA Trainee\\dvd-app\\src\\components\\Button\\CustomButton.js":"10","E:\\BCA Trainee\\dvd-app\\src\\services\\axios-instance.js":"11","E:\\BCA Trainee\\dvd-app\\src\\components\\Table\\Table4.js":"12","E:\\BCA Trainee\\dvd-app\\src\\pages\\Actor\\ActorPage.js":"13","E:\\BCA Trainee\\dvd-app\\src\\pages\\Film\\Film.js":"14","E:\\BCA Trainee\\dvd-app\\src\\components\\Table\\Table3.js":"15"},{"size":517,"mtime":1612148731373,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1612148731378,"results":"18","hashOfConfig":"17"},{"size":1404,"mtime":1612935936164,"results":"19","hashOfConfig":"17"},{"size":857,"mtime":1612148731364,"results":"20","hashOfConfig":"17"},{"size":908,"mtime":1612148731369,"results":"21","hashOfConfig":"17"},{"size":8721,"mtime":1612757002200,"results":"22","hashOfConfig":"23"},{"size":243,"mtime":1612757002203,"results":"24","hashOfConfig":"17"},{"size":18794,"mtime":1612757002202,"results":"25","hashOfConfig":"23"},{"size":1316,"mtime":1612768245409,"results":"26","hashOfConfig":"17"},{"size":396,"mtime":1612148731362,"results":"27","hashOfConfig":"17"},{"size":248,"mtime":1612929129681,"results":"28","hashOfConfig":"17"},{"size":3041,"mtime":1612935555561,"results":"29","hashOfConfig":"23"},{"size":10816,"mtime":1612757002195,"results":"30","hashOfConfig":"17"},{"size":22143,"mtime":1612757002197,"results":"31","hashOfConfig":"17"},{"size":3927,"mtime":1612757002168,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"q247jd",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1ikj9dz",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\BCA Trainee\\dvd-app\\src\\index.js",[],["67","68"],"E:\\BCA Trainee\\dvd-app\\src\\reportWebVitals.js",[],"E:\\BCA Trainee\\dvd-app\\src\\App.js",[],"E:\\BCA Trainee\\dvd-app\\src\\components\\Footer\\Footer.js",["69"],"E:\\BCA Trainee\\dvd-app\\src\\components\\Sidebar\\Sidebar.js",[],"E:\\BCA Trainee\\dvd-app\\src\\pages\\TestHook\\TestHook.js",["70","71","72","73","74","75"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Grid, Typography, Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport dateFormat from 'dateformat';\r\nimport Axios from \"../../services/axios-instance\";\r\nimport TableComp from '../../components/Table/Table4'\r\nimport Swal from \"sweetalert2\"\r\n\r\nfunction TestHook() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [count, setCount] = useState(0);\r\n    const [fruit, setFruit] = useState('banana');\r\n    const [actorId, setActorId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const [stateForm, setStateForm] = useState(\"Add\");\r\n\r\n    const columns = [\r\n        { name: 'actorId', label: 'Actor Id' },\r\n        { name: 'firstName', label: 'First Name' },\r\n        { name: 'lastName', label: 'Last Name' },\r\n        {\r\n            name: 'lastUpdate', label: 'Last Update',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return dateFormat(value, \"mmmm dS, yyyy\");\r\n                }\r\n            }\r\n\r\n        },\r\n    ];\r\n    const [alert, setAlert] = useState(false);\r\n    const [actors, setActors] = useState([]);\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (actors.length && !alert) {\r\n            return;\r\n        }\r\n        Axios.get(\"actor\").then((response) => {\r\n            setActors(response.data)\r\n            setAlert(false);\r\n        })\r\n        return () => mounted = false;\r\n    }, [alert, actors])\r\n\r\n    const handleSubmitSave = (event) => {\r\n        console.log(firstName)\r\n        console.log(lastName)\r\n        const actor = {\r\n            firstName: firstName,\r\n            lastName: lastName\r\n        }\r\n        Swal.fire({\r\n            icon: 'question',\r\n            text: 'Your input data is correct?',\r\n            showCancelButton: true,\r\n            confirmButtonText: `Save`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                if (stateForm === \"Add\") {\r\n                    Axios.post(\"actor\", actor).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new Actor!',\r\n                        }).then((result) => {\r\n                            setFirstName('')\r\n                            setLastName('')\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                } else {\r\n                    Axios.put(\"actor/id/\" + actorId, actor).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new Actor!',\r\n                        }).then((result) => {\r\n                            setFirstName('')\r\n                            setLastName('')\r\n                            setStateForm('Add')\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    const handleBackToAdd = () => {\r\n        setFirstName('')\r\n        setLastName('')\r\n        setStateForm('Add')\r\n    }\r\n    const handleUpdate = (i) => {\r\n        Axios.get(\"actor/id/\" + i).then((response) => {\r\n            setActorId(response.data.actorId)\r\n            setFirstName(response.data.firstName)\r\n            setLastName(response.data.lastName)\r\n            setStateForm(\"Update\")\r\n        })\r\n    }\r\n    const handleRemove = (i) => {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            text: 'Do you want to delete this data?',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `Cancel`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Axios.delete(\"actor/id/\" + i).then((response) => {\r\n                    console.log(response);\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Successfully!',\r\n                        text: 'You submit a new Actor!',\r\n                    }).then((result) => {\r\n                        setStateForm(\"Add\")\r\n                        setAlert(true)\r\n                    })\r\n                }).catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.header);\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: error.response.data.message,\r\n                        }).then((result) => {\r\n                            setStateForm(\"Add\")\r\n                        })\r\n                    }\r\n                })\r\n            } else if (result.isDenied) {\r\n\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container className=\"section\">\r\n                <Grid item className=\"section_title\" xs={12}>\r\n                    <Typography variant='h6'>Actor Page</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Typography style={{ alignItems: 'center' }}>Form {stateForm}</Typography>\r\n                <br />\r\n                <Paper style={{ padding: 16, width: '100%', }}>\r\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"First Name\" name=\"firstName\" required value={firstName} onChange={e => setFirstName(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Last Name\" name=\"lastName\" required value={lastName} onChange={e => setLastName(e.target.value)} />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={!firstName || !lastName}\r\n                                style={{ width: '100%' }}\r\n                                onClick={handleSubmitSave}\r\n                            >\r\n                                {stateForm} Actor\r\n                                </Button>\r\n                        </Grid>\r\n                        {(() => {\r\n                            if (stateForm === 'Update') {\r\n                                return (\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                style={{ width: '100%' }}\r\n                                                onClick={handleBackToAdd}\r\n                                            >\r\n                                                <ArrowBackIosIcon /> Back to add data\r\n                                                </Button>\r\n                                        </Grid>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            return;\r\n                        })()}\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Grid item xs={8}>\r\n                    <Typography>List Actor</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <TableComp\r\n                    allData={actors}\r\n                    allColumns={columns}\r\n                    title=\"Table Actor\"\r\n                    handleUpdate={handleUpdate}\r\n                    handleRemove={handleRemove}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\nexport default TestHook",["76","77"],"E:\\BCA Trainee\\dvd-app\\src\\pages\\TestHook\\TestHook3.js",["78","79"],"E:\\BCA Trainee\\dvd-app\\src\\pages\\TestHook\\TestHook2.js",["80","81","82","83","84"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Grid, Typography, Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport dateFormat from 'dateformat';\r\nimport Axios from \"../../services/axios-instance\";\r\nimport TableComp from '../../components/Table/Table4'\r\nimport Swal from \"sweetalert2\"\r\n\r\nfunction TestHook() {\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [filmId, setFilmId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [releaseYear, setReleaseYear] = useState('');\r\n    const [rentalDuration, setRentalDuration] = useState('');\r\n    const [rentalRate, setRentalRate] = useState('');\r\n    const [length, setLength] = useState('');\r\n    const [replacementCost, setReplacementCost] = useState('');\r\n    const [languageId, setLanguageId] = useState('');\r\n    const [rating, setRating] = useState('');\r\n    const [ratings, setRatings] = useState([\r\n        { id: \"G\", label: \"G\" },\r\n        { id: \"PG\", label: \"PG\" },\r\n        { id: \"PG13\", label: \"PG-13\" },\r\n        { id: \"NC17\", label: \"NC-17\" },\r\n        { id: \"R\", label: \"R\" },\r\n    ]);\r\n    const [specialFeature, setSpecialFeature] = useState([]);\r\n    const [featureCheck, setFeatureCheck] = useState([\r\n        { status: false, label: \"Commentaries\" },\r\n        { status: false, label: \"Behind the Scenes\" },\r\n        { status: false, label: \"Deleted Scenes\" },\r\n        { status: false, label: \"Trailers\" },\r\n    ]);\r\n    const [stateForm, setStateForm] = useState(\"Add\");\r\n    const columns = [\r\n        { name: 'filmId', label: 'Film Id' },\r\n        { name: 'title', label: 'Title' },\r\n        { name: 'description', label: 'Description' },\r\n        { name: 'releaseYear', label: 'Release Year' },\r\n        {\r\n            name: 'languageId', label: 'Language',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return value.name;\r\n                },\r\n            }\r\n        },\r\n        { name: 'rentalDuration', label: 'Rental Duration' },\r\n        { name: 'rentalRate', label: 'Rental Rate' },\r\n        { name: 'length', label: 'Length' },\r\n        { name: 'replacementCost', label: 'Cost' },\r\n        {\r\n            name: 'rating', label: 'Rating',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    switch (value) {\r\n                        case \"G\":\r\n                            return 'G'\r\n                        case \"PG\":\r\n                            return 'PG'\r\n                        case \"PG13\":\r\n                            return 'PG-13'\r\n                        case \"NC17\":\r\n                            return 'NC-17'\r\n                        case \"R\":\r\n                            return 'R'\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        {\r\n            name: 'specialFeature', label: 'Special Features',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return value + \", \";\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'lastUpdate', label: 'Last Update',\r\n            options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return dateFormat(value, \"mmmm dS, yyyy\");\r\n                }\r\n            }\r\n        }\r\n    ];\r\n    const [alert, setAlert] = useState(false);\r\n    const [films, setFilms] = useState([]);\r\n    useEffect(() => {\r\n        if (films.length && !alert) {\r\n            return;\r\n        }\r\n        Axios.get(\"film\").then((response) => {\r\n            setFilms(response.data)\r\n            setAlert(false);\r\n        })\r\n    }, [alert, films])\r\n\r\n    const [alertLanguages, setAlertLanguages] = useState(false);\r\n    const [languages, setLanguages] = useState([]);\r\n    useEffect(() => {\r\n        if (languages.length && !alert) {\r\n            return;\r\n        }\r\n        Axios.get(\"language\").then((response) => {\r\n            setLanguages(response.data)\r\n            setAlertLanguages(false)\r\n        })\r\n    }, [alertLanguages, languages])\r\n\r\n    const handleSubmitSave = (event) => {\r\n        const film = {\r\n            title: title,\r\n            description: description,\r\n            languageId: languageId,\r\n            length: length,\r\n            rating: rating,\r\n            releaseYear: releaseYear,\r\n            rentalDuration: rentalDuration,\r\n            rentalRate: rentalRate,\r\n            replacementCost: replacementCost,\r\n            specialFeature: specialFeature\r\n        }\r\n        console.log(film)\r\n        Swal.fire({\r\n            icon: 'question',\r\n            text: 'Your input data is correct?',\r\n            showCancelButton: true,\r\n            confirmButtonText: `Save`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                if (stateForm === \"Add\") {\r\n                    Axios.post(\"film\", film).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new film!',\r\n                        }).then((result) => {\r\n                            setTitle('')\r\n                            setDescription('')\r\n                            setLanguageId('')\r\n                            setLength('')\r\n                            setRating('')\r\n                            setReleaseYear('')\r\n                            setRentalDuration('')\r\n                            setRentalRate('')\r\n                            setReplacementCost('')\r\n                            setSpecialFeature([])\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                } else {\r\n                    Axios.put(\"film/id/\" + filmId, film).then((response) => {\r\n                        console.log(response);\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Successfully!',\r\n                            text: 'You submit a new film!',\r\n                        }).then((result) => {\r\n                            setTitle('')\r\n                            setDescription('')\r\n                            setLanguageId('')\r\n                            setLength('')\r\n                            setRating('')\r\n                            setReleaseYear('')\r\n                            setRentalDuration('')\r\n                            setRentalRate('')\r\n                            setReplacementCost('')\r\n                            setSpecialFeature([])\r\n                            setStateForm('Add')\r\n                            setAlert(true)\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    const handleBackToAdd = () => {\r\n        setTitle('')\r\n        setDescription('')\r\n        setStateForm('Add')\r\n    }\r\n    const handleUpdate = (i) => {\r\n        Axios.get(\"film/id/\" + i).then((response) => {\r\n            console.log(response.data)\r\n            setFilmId(response.data.filmId)\r\n            setTitle(response.data.title)\r\n            setDescription(response.data.description)\r\n            setLanguageId(response.data.languageId.languageId)\r\n            setLength(response.data.length)\r\n            setRating(response.data.rating)\r\n            setReleaseYear(response.data.releaseYear)\r\n            setRentalDuration(response.data.rentalDuration)\r\n            setRentalRate(response.data.rentalRate)\r\n            setReplacementCost(response.data.replacementCost)\r\n            setSpecialFeature(response.data.specialFeature)\r\n            setStateForm(\"Update\")\r\n        })\r\n    }\r\n    const handleRemove = (i) => {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            text: 'Do you want to delete this data?',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `Cancel`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Axios.delete(\"film/id/\" + i).then((response) => {\r\n                    console.log(response);\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Successfully!',\r\n                        text: 'You submit a new film!',\r\n                    }).then((result) => {\r\n                        setStateForm(\"Add\")\r\n                        setAlert(true)\r\n                    })\r\n                }).catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                        console.log(error.response.status);\r\n                        console.log(error.response.header);\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: error.response.data.message,\r\n                        }).then((result) => {\r\n                            setStateForm(\"Add\")\r\n                        })\r\n                    }\r\n                })\r\n            } else if (result.isDenied) {\r\n\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container className=\"section\">\r\n                <Grid item className=\"section_title\" xs={12}>\r\n                    <Typography variant='h6'>film Page</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Typography style={{ alignItems: 'center' }}>Form {stateForm}</Typography>\r\n                <br />\r\n                <Paper style={{ padding: 16, width: '100%', }}>\r\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Title\" name=\"title\" required value={title} onChange={e => setTitle(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                id=\"standard-select-language\"\r\n                                select\r\n                                label=\"Language\"\r\n                                name=\"languageId\"\r\n                                value={languageId}\r\n                                onChange={e => setLanguageId(e.target.value)}\r\n                                helperText=\"Please select your language\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                {languages.map((option) => (\r\n                                    <MenuItem key={option.languageId} value={option.languageId}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                id=\"standard-select-rating\"\r\n                                select\r\n                                label=\"Rating\"\r\n                                name=\"rating\"\r\n                                value={rating}\r\n                                onChange={e => setRating(e.target.value)}\r\n                                helperText=\"Please select your Rating\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                {ratings.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField style={{ width: '100%', }} label=\"Description\" name=\"description\" required value={description} onChange={e => setDescription(e.target.value)} multiline rows={2} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Release Year\" name=\"releaseYear\" required value={releaseYear} onChange={e => setReleaseYear(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <CalendarTodayIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Length\" name=\"length\" required value={length} onChange={e => setLength(e.target.value)} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Rental Duration\" name=\"rentalDuration\" required value={rentalDuration} onChange={e => setRentalDuration(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <UpdateIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Rental Rate\" name=\"rentalRate\" required value={rentalRate} onChange={e => setRentalRate(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AttachMoneyIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Replacement Cost\" name=\"replacementCost\" required value={replacementCost} onChange={e => setReplacementCost(e.target.value)} InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AttachMoneyIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormLabel component=\"legend\">Special Features</FormLabel>\r\n                            {featureCheck.map((x, i) => (\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={specialFeature.includes(x.label) === true ? true : x.status} onChange={e => setSpecialFeature([...specialFeature, e.target.name])} name={x.label} />}\r\n                                    label={x.label}\r\n                                />\r\n                            ))}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={!title || !description || !languageId || !rating || !length || !releaseYear || !rentalDuration || !rentalRate || !replacementCost || specialFeature.length < 1}\r\n                                style={{ width: '100%' }}\r\n                                onClick={handleSubmitSave}\r\n                            >\r\n                                {stateForm} Film\r\n                                </Button>\r\n                        </Grid>\r\n                        {(() => {\r\n                            if (stateForm === 'Update') {\r\n                                return (\r\n                                    <>\r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                style={{ width: '100%' }}\r\n                                                onClick={handleBackToAdd}\r\n                                            >\r\n                                                <ArrowBackIosIcon /> Back to add data\r\n                                                </Button>\r\n                                        </Grid>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            return;\r\n                        })()}\r\n\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <Grid item xs={8}>\r\n                    <Typography>List film</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container className=\"\">\r\n                <TableComp\r\n                    allData={films}\r\n                    allColumns={columns}\r\n                    title=\"Table Film\"\r\n                    handleUpdate={handleUpdate}\r\n                    handleRemove={handleRemove}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\nexport default TestHook","E:\\BCA Trainee\\dvd-app\\src\\components\\Header\\Header.js",["85","86","87","88","89"],"E:\\BCA Trainee\\dvd-app\\src\\components\\Button\\CustomButton.js",[],"E:\\BCA Trainee\\dvd-app\\src\\services\\axios-instance.js",[],"E:\\BCA Trainee\\dvd-app\\src\\components\\Table\\Table4.js",["90"],"E:\\BCA Trainee\\dvd-app\\src\\pages\\Actor\\ActorPage.js",["91","92","93"],"E:\\BCA Trainee\\dvd-app\\src\\pages\\Film\\Film.js",["94","95"],"E:\\BCA Trainee\\dvd-app\\src\\components\\Table\\Table3.js",["96","97","98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":20,"column":21,"nodeType":"106","endLine":20,"endColumn":88},{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":13,"column":12,"nodeType":"109","messageId":"110","endLine":13,"endColumn":17},{"ruleId":"107","severity":1,"message":"112","line":13,"column":19,"nodeType":"109","messageId":"110","endLine":13,"endColumn":27},{"ruleId":"107","severity":1,"message":"113","line":14,"column":12,"nodeType":"109","messageId":"110","endLine":14,"endColumn":17},{"ruleId":"107","severity":1,"message":"114","line":14,"column":19,"nodeType":"109","messageId":"110","endLine":14,"endColumn":27},{"ruleId":"107","severity":1,"message":"115","line":46,"column":22,"nodeType":"109","messageId":"110","endLine":46,"endColumn":29},{"ruleId":"100","replacedBy":"116"},{"ruleId":"102","replacedBy":"117"},{"ruleId":"107","severity":1,"message":"118","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"119","line":1,"column":26,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":19},{"ruleId":"107","severity":1,"message":"120","line":31,"column":21,"nodeType":"109","messageId":"110","endLine":31,"endColumn":31},{"ruleId":"107","severity":1,"message":"121","line":39,"column":26,"nodeType":"109","messageId":"110","endLine":39,"endColumn":41},{"ruleId":"122","severity":1,"message":"123","line":67,"column":21,"nodeType":"124","messageId":"125","endLine":78,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":121,"column":8,"nodeType":"128","endLine":121,"endColumn":35,"suggestions":"129"},{"ruleId":"107","severity":1,"message":"130","line":3,"column":5,"nodeType":"109","messageId":"110","endLine":3,"endColumn":11},{"ruleId":"107","severity":1,"message":"131","line":4,"column":5,"nodeType":"109","messageId":"110","endLine":4,"endColumn":9},{"ruleId":"107","severity":1,"message":"132","line":5,"column":5,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"133","line":8,"column":5,"nodeType":"109","messageId":"110","endLine":8,"endColumn":16},{"ruleId":"107","severity":1,"message":"134","line":12,"column":5,"nodeType":"109","messageId":"110","endLine":12,"endColumn":9},{"ruleId":"107","severity":1,"message":"135","line":5,"column":17,"nodeType":"109","messageId":"110","endLine":5,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":19},{"ruleId":"107","severity":1,"message":"136","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":13},{"ruleId":"107","severity":1,"message":"137","line":189,"column":15,"nodeType":"109","messageId":"110","endLine":189,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":19},{"ruleId":"107","severity":1,"message":"138","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":18},{"ruleId":"107","severity":1,"message":"139","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":13},{"ruleId":"107","severity":1,"message":"140","line":10,"column":10,"nodeType":"109","messageId":"110","endLine":10,"endColumn":20},{"ruleId":"107","severity":1,"message":"137","line":12,"column":7,"nodeType":"109","messageId":"110","endLine":12,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":33,"column":1,"nodeType":"143","endLine":102,"endColumn":2},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'fruit' is assigned a value but never used.","'setFruit' is assigned a value but never used.","'mounted' is assigned a value but never used.",["144"],["145"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'setRatings' is assigned a value but never used.","'setFeatureCheck' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'Input' is defined but never used.","'useStyles' is assigned a value but never used.","'SearchIcon' is defined but never used.","'Axios' is defined but never used.","'CsvBuilder' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [alert, alertLanguages, languages]",{"range":"149","text":"150"},[4787,4814],"[alert, alertLanguages, languages]"]