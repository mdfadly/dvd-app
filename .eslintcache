[{"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\index.js":"1","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\App.js":"2","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\reportWebVitals.js":"3","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Actor\\Index.js":"4","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Sidebar\\Sidebar.js":"5","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Film\\Film.js":"6","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Header\\Header.js":"7","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Footer\\Footer.js":"8","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table2.js":"9","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\services\\axios-instance.js":"10","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Button\\CustomButton.js":"11"},{"size":500,"mtime":1611761499000,"results":"12","hashOfConfig":"13"},{"size":1069,"mtime":1611761499000,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611761499000,"results":"15","hashOfConfig":"13"},{"size":11535,"mtime":1611883097668,"results":"16","hashOfConfig":"13"},{"size":880,"mtime":1611761499000,"results":"17","hashOfConfig":"13"},{"size":21169,"mtime":1611908053026,"results":"18","hashOfConfig":"13"},{"size":1271,"mtime":1611761499000,"results":"19","hashOfConfig":"13"},{"size":830,"mtime":1611761499000,"results":"20","hashOfConfig":"13"},{"size":11232,"mtime":1611893067167,"results":"21","hashOfConfig":"13"},{"size":229,"mtime":1611761499000,"results":"22","hashOfConfig":"13"},{"size":382,"mtime":1611761499000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"194bzy0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\index.js",[],["51","52"],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\App.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\reportWebVitals.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Actor\\Index.js",["53","54","55"],"import { React, Component } from 'react'\nimport TableComp from '../../components/Table/Table2'\nimport { Container, Grid, Typography, Button } from '@material-ui/core';\nimport './Actor.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from \"@material-ui/core/Card\";\nimport Paper from '@material-ui/core/Paper';\nimport Axios from \"../../services/axios-instance\";\nimport Swal from \"sweetalert2\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            actors: [],\n            actorId: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            searchActor: \"\",\n            editIdx: -1,\n            headCells: [\n                { id: 'actorId', numeric: true, disablePadding: false, label: 'Actor Id' },\n                { id: 'firstName', numeric: false, disablePadding: true, label: 'First Name' },\n                { id: 'lastName', numeric: false, disablePadding: true, label: 'Last Name' },\n                { id: 'lastUpdate', numeric: false, disablePadding: true, label: 'Last Update' },\n                { id: 'actions', numeric: false, disablePadding: true, label: 'Actions' },\n            ],\n            conditions: false,\n            stateForm: \"Add\",\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n    componentDidMount() {\n        this.findActor();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.conditions) {\n            this.findActor();\n            this.setState({ conditions: false });\n        }\n    }\n\n    findActor() {\n        Axios.get(\"actor\").then((response) => {\n            console.log(response);\n            this.setState({\n                actors: response.data\n            })\n        })\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    handleSubmitSave = (event) => {\n        const actor = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName\n        }\n        Swal.fire({\n            icon: 'question',\n            text: 'Your input data is correct?',\n            showCancelButton: true,\n            confirmButtonText: `Save`,\n        }).then((result) => {\n            if (result.isConfirmed) {\n                if (this.state.stateForm === \"Add\") {\n                    Axios.post(\"actor\", actor).then((response) => {\n                        console.log(response);\n                        Swal.fire({\n                            icon: 'success',\n                            title: 'Successfully!',\n                            text: 'You submit a new Actor!',\n                        }).then((result) => {\n                            this.setState({ firstName: \"\", lastName: \"\", conditions: true })\n                        })\n                    })\n                } else {\n                    Axios.put(\"actor/id/\" + this.state.actorId, actor).then((response) => {\n                        console.log(response);\n                        Swal.fire({\n                            icon: 'success',\n                            title: 'Successfully!',\n                            text: 'You submit a new Actor!',\n                        }).then((result) => {\n                            this.setState({ firstName: \"\", lastName: \"\", conditions: true, stateForm: \"Add\" })\n                        })\n                    })\n                }\n            }\n        })\n\n    }\n\n    handleRemove = (i) => {\n        console.log(i)\n        Swal.fire({\n            icon: 'warning',\n            text: 'Do you want to delete this data?',\n            showDenyButton: true,\n            confirmButtonText: `Yes`,\n            denyButtonText: `Cancel`,\n        }).then((result) => {\n            if (result.isConfirmed) {\n                Axios.delete(\"actor/id/\" + i).then((response) => {\n                    console.log(response);\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Successfully!',\n                        text: 'You submit a new Actor!',\n                    }).then((result) => {\n                        this.setState({ firstName: \"\", lastName: \"\", conditions: true, stateForm: \"Add\" })\n                    })\n                }).catch(function (error) {\n                    if (error.response) {\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.header);\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: error.response.data.message,\n                        }).then((result) => {\n                            this.setState({ firstName: \"\", lastName: \"\", conditions: true, stateForm: \"Add\" })\n                        })\n                    }\n                })\n            } else if (result.isDenied) {\n\n            }\n        });\n    }\n\n    handleBackToAdd = () => {\n        this.setState({\n            firstName: \"\",\n            lastName: \"\",\n            stateForm: \"Add\"\n        });\n    }\n\n    handleUpdate = (i) => {\n        console.log(i)\n        Axios.get(\"actor/id/\" + i).then((response) => {\n            console.log(response);\n            this.setState({\n                actorId: response.data.actorId,\n                firstName: response.data.firstName,\n                lastName: response.data.lastName,\n                stateForm: \"Update\"\n            })\n        })\n        this.setState({\n            editIdx: i,\n        })\n    }\n\n    handleSearch = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n        console.log(event.target.value);\n        if(event.target.value !== \"\"){\n            Axios.get(\"actor/search/\" + event.target.value).then((response) => {\n                console.log(response);\n                this.setState({\n                    actors: response.data,\n                })\n            }).catch(function (error) {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.header);\n                }\n                this.findActor();\n            })\n        }else{\n            this.findActor();\n        }  \n    }\n\n    render() {\n        const useStyles = makeStyles((theme) => ({\n            card: {\n                width: 500,\n                maxWidth: 300,\n                margin: \"auto\",\n                transition: \"0.3s\",\n                boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n                \"&:hover\": {\n                    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n                }\n            },\n        }));\n\n        return (\n            <>\n                <Grid container className=\"section\">\n                    <Grid item className=\"section_title\" xs={12}>\n                        <Typography variant='h6'>Actor Page</Typography>\n                    </Grid>\n                </Grid>\n                <br />\n                <Grid container className=\"\">\n                    <Typography style={{ alignItems: 'center' }}>Form {this.state.stateForm}</Typography>\n                    <br />\n                    <Paper style={{ padding: 16, width: '100%', }}>\n                        <Grid container alignItems=\"flex-start\" spacing={2}>\n                            <Grid item xs={6}>\n                                <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"First Name\" name=\"firstName\" required value={this.state.firstName} onChange={this.handleChange} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextField style={{ width: '100%', }} id=\"standard-basic\" label=\"Last Name\" name=\"lastName\" required value={this.state.lastName} onChange={this.handleChange} />\n                            </Grid>\n                            <Grid item xs={12} style={{ marginTop: 16 }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={!this.state.firstName || !this.state.lastName}\n                                    style={{ width: '100%' }}\n                                    onClick={this.handleSubmitSave}\n                                >\n                                    {this.state.stateForm} Actor\n                                </Button>\n                            </Grid>\n                            {(() => {\n                                if (this.state.stateForm === 'Update') {\n                                    return (\n                                        <>\n                                            <Grid item xs={12}>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"secondary\"\n                                                    style={{ width: '100%' }}\n                                                    onClick={this.handleBackToAdd}\n                                                >\n                                                    <ArrowBackIosIcon /> Back to add data\n                                                </Button>\n                                            </Grid>\n                                        </>\n                                    )\n                                }\n                                return;\n                            })()}\n\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <br />\n                <Grid container className=\"\">\n                    <Grid item xs={8}>\n                        <Typography>List Actor</Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            style={{ width: '100%', fontSize: '12px' }}\n                            id=\"outlined-basic\"\n                            label=\"Search Actor\"\n                            name=\"searchActor\"\n                            value={this.state.searchActor}\n                            onChange={this.handleSearch}\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <br />\n                <Grid container className=\"\">\n                    <TableComp\n                        rows={this.state.actors}\n                        headCells={this.state.headCells}\n                        handleRemove={this.handleRemove}\n                        startEditing={this.handleUpdate}\n                        formData=\"actor\"\n                    />\n                </Grid>\n\n            </>\n        )\n    }\n}\n\nexport default Index\n","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\pages\\Film\\Film.js",["56"],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Header\\Header.js",["57","58","59","60","61","62","63"],"import React from 'react'\nimport {\n    Button,\n    Form,\n    FormControl,\n    Nav,\n    Navbar,\n    NavDropdown,\n} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Link,\n    NavLink,\n    withRouter,\n} from 'react-router-dom'\nimport {\n    HomeRounded\n} from '@material-ui/icons'\nimport './Header.css'\n\nconst Header = (props) => {\n    const pathName = props ?.location ?.pathname;\n    return (\n        <Navbar expand=\"lg\" sticky=\"top\" className=\"header\">\n            <Nav.Link as={NavLink} to=\"/\" className=\"header_navlink\">\n                <Navbar.Brand className=\"header_home\">\n                    <HomeRounded />\n                </Navbar.Brand>\n            </Nav.Link>\n\n            <Navbar.Toggle />\n\n            <Navbar.Collapse>\n                <Nav>\n                    <Nav.Link as={NavLink} to=\"/\" className={pathName === '/' ? 'header_link_active' : 'header_link'}>\n                        Actor\n                    </Nav.Link>\n                    <Nav.Link as={NavLink} to=\"/film\" className={pathName === '/film' ? 'header_link_active' : 'header_link'}>\n                        Film\n                    </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default withRouter(Header)\n","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Footer\\Footer.js",["64"],"import React from 'react'\nimport { Typography } from '@material-ui/core';\nimport './Footer.css'\n\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer_left\">\n                <Typography className=\"footer_name\">\n                    Dvd Rental\n                </Typography>\n            </div>\n            <div className=\"footer_right\">\n                <Typography className=\"footer_copyright\">\n                    Design and Developed by {\" \"}\n                    <a href=\"/\" target=\"_blank\">Mochamad Dwi Fadly</a>\n                    <br />\n                    Clone idea from {\" \"}\n                    <a href=\"https:///themeforest.net/user/travonline\" target=\"_blank\">Travonline</a>\n                </Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Table\\Table2.js",["65","66"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport dateFormat from 'dateformat';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#ffc500',\n        color: theme.palette.common.white,\n        marginLeft: 10,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nfunction EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort, headCells } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <StyledTableCell\n                        key={headCell.id}\n                        align={'center'}\n                        padding={'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </StyledTableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    headCells: PropTypes.object.isRequired\n};\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n        padding: '10'\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    buttonEdit: {\n        color: '#ffc500'\n    },\n    buttonDelete: {\n        color: '#ff5252',\n    }\n}));\nconst mapData = (x, i, headCells, handleRemove, startEditing, formData) => {\n    const btnStyle = makeStyles((theme) => ({\n        buttonEdit: {\n\n        },\n        buttonDelete: {\n            color: '#ff5252',\n        }\n    }));\n    return (\n        <TableRow\n            // hover\n            role=\"checkbox\"\n            tabIndex={-1}\n            key={formData === \"actor\" ? x.actorId : x.filmId}\n        >\n            {headCells.map((y, k) => (\n                <StyledTableCell key={`trc-${k}`}>\n                    {(() => {\n                        if (y.id === 'actions') {\n                            return (\n                                <>  <Button >\n                                    <EditIcon style={{ color: '#ffc500' }} onClick={() => startEditing(formData === \"actor\" ? x.actorId : x.filmId)} />\n                                </Button>\n                                    <Button style={{ color: '#ff5252' }}>\n                                        <DeleteIcon onClick={() => handleRemove(formData === \"actor\" ? x.actorId : x.filmId)} />\n                                    </Button>\n                                </>\n                            )\n                        }\n                        if (y.id === 'languageId') {\n                            return x.languageId.name;\n                        }\n                        if (y.id === 'specialFeature') {\n                            // for(var ab=0; ab < x.specialFeature.length; ab++){\n                                return x.specialFeature+\", \";\n                            // }\n                        }\n                        if (y.id === 'lastUpdate') {\n                            return dateFormat(x[y.id], \"mmmm dS, yyyy\");\n                        }\n                        return x[y.id];\n                    })()}\n                </StyledTableCell>\n            ))}\n        </TableRow>\n    );\n}\nconst useStyles1 = makeStyles((theme) => ({\n    root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\nfunction TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.root}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\nexport default ({ rows, headCells, handleRemove, startEditing, formData }) => {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            headCells={headCells}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) =>\n                                    mapData(row, index, headCells, handleRemove, startEditing, formData)\n                                )}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                    colSpan={3}\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    SelectProps={{\n                        inputProps: { 'aria-label': 'rows per page' },\n                        native: true,\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    ActionsComponent={TablePaginationActions}\n                />\n            </Paper>\n        </div>\n    );\n}\n","C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\services\\axios-instance.js",[],"C:\\Users\\U541680\\Documents\\Reactjs\\app-dvdrental\\src\\components\\Button\\CustomButton.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":19},{"ruleId":"71","severity":1,"message":"75","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":12},{"ruleId":"71","severity":1,"message":"76","line":191,"column":15,"nodeType":"73","messageId":"74","endLine":191,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":19},{"ruleId":"71","severity":1,"message":"77","line":3,"column":5,"nodeType":"73","messageId":"74","endLine":3,"endColumn":11},{"ruleId":"71","severity":1,"message":"78","line":4,"column":5,"nodeType":"73","messageId":"74","endLine":4,"endColumn":9},{"ruleId":"71","severity":1,"message":"79","line":5,"column":5,"nodeType":"73","messageId":"74","endLine":5,"endColumn":16},{"ruleId":"71","severity":1,"message":"80","line":8,"column":5,"nodeType":"73","messageId":"74","endLine":8,"endColumn":16},{"ruleId":"71","severity":1,"message":"81","line":12,"column":5,"nodeType":"73","messageId":"74","endLine":12,"endColumn":9},{"ruleId":"82","severity":1,"message":"83","line":22,"column":22,"nodeType":"84","messageId":"85","endLine":22,"endColumn":49,"fix":"86"},{"ruleId":"82","severity":1,"message":"87","line":22,"column":22,"nodeType":"84","messageId":"85","endLine":22,"endColumn":38,"fix":"88"},{"ruleId":"89","severity":1,"message":"90","line":20,"column":21,"nodeType":"91","endLine":20,"endColumn":88},{"ruleId":"71","severity":1,"message":"92","line":136,"column":11,"nodeType":"73","messageId":"74","endLine":136,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":246,"column":1,"nodeType":"95","endLine":318,"endColumn":2},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'useStyles' is assigned a value but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property pathname.","MemberExpression","unexpectedWhitespace",{"range":"98","text":"99"},"Unexpected whitespace before property location.",{"range":"100","text":"99"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'btnStyle' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[399,402],"?.",[388,391]]